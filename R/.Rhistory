snark2=cbind(snark[,1:3], ind, snark[4:length(snark)])
head(snark2)
aaa=ddply(snark, .(population.of.origin, sex..f.0., family.id), summarise, d1=mean(day.1.area.mm2), d2=mean(day.4.area.mm2), d3=mean(day.7.area.mm2), d4=mean(day.10.area.mm2), d5=mean(day.13.area.mm2))
aaa
mean(snark[,7])
mean(snark[,7], na.rm=T)
aaa=ddply(snark, .(population.of.origin, sex..f.0., family.id), summarise, d1=mean(day.1.area.mm2, na.rm=T), d2=mean(day.4.area.mm2, na.rm=T), d3=mean(day.7.area.mm2, na.rm=T), d4=mean(day.10.area.mm2, na.rm=T), d5=mean(day.13.area.mm2, na.rm=T
)
)
head(snark2)
snark=read.table("snarkData.csv", header=T, sep=",")
str(snark)
unique(snark[,2])
snark[,2]=as.character(snark[,2])
snark[,2]=tolower(snark[,2])
snark[which(snark[,2]=="f"),2]=0
snark[which(snark[,2]=="female"),2]=0
snark[which(snark[,2]=="m"),2]=1
snark[which(snark[,2]=="male"),2]=1
snarkSum=ddply(snark, .(population.of.origin, sex..f.0., family.id), summarise, d1=mean(day.1.area.mm2, na.rm=T), d2=mean(day.4.area.mm2, na.rm=T), d3=mean(day.7.area.mm2, na.rm=T), d4=mean(day.10.area.mm2, na.rm=T), d5=mean(day.13.area.mm2, na.rm=T))
head(SnarkSum)
head(snarkSum)
c(head(snark))
head(snark)
calcBod=function(main, slope, fam, ind){
transfVec=which(ind[,1]==fam[,1] & ind[,2]==fam[,2] & ind[,3]==fam[3])
newU=ind[transfVec, c(day.1.area.mm2,day.1.area.mm2, day.1.area.mm2, day.1.area.mm2, day.1.area.mm2)]
newU=(newU+ind)*main + slope*(c(1, 2, 3, 4, 5))
ind[transfVec, c("bod1", "bod2", "bod3", "bod4", "bod5")]=newU
return(ind)
}
fam=snarkSum[1,]
ind=snark2
main=10
calcBod=function(main, slope, origin, expon, fam, ind){
transfVec=which(ind[,1]==fam[,1] & ind[,2]==fam[,2] & ind[,3]==fam[3])
newU=ind[transfVec, c(day.1.area.mm2,day.1.area.mm2, day.1.area.mm2, day.1.area.mm2, day.1.area.mm2)]
newU=((newU+ind)*main + slope*(c(1, 2, 3, 4, 5)) - origin)^expon
ind[transfVec, c("bod1", "bod2", "bod3", "bod4", "bod5")]=newU
return(ind)
}
fam=snarkSum[1,]
main=10
slope=0.1
expon=1.1
ind=snark
calcBod(main, slope, origin, expon, fam, ind)
fam=snarkSum[1,, drop=F]
main=10
slope=0.1
expon=1.1
ind=snark
calcBod(main, slope, origin, expon, fam, ind)
transfVec=which(ind[,1]==fam[,1] & ind[,2]==fam[,2] & ind[,3]==fam[3])
head(ind)
fam
calcBod=function(main, slope, origin, expon, fam, ind){
transfVec=which(ind[,1]==fam[1,1] & ind[,2]==fam[1,2] & ind[,3]==fam[1,3])
newU=ind[transfVec, c(day.1.area.mm2,day.1.area.mm2, day.1.area.mm2, day.1.area.mm2, day.1.area.mm2)]
newU=((newU+ind)*main + slope*(c(1, 2, 3, 4, 5)) - origin)^expon
ind[transfVec, c("bod1", "bod2", "bod3", "bod4", "bod5")]=newU
return(ind)
}
transfVec=which(ind[,1]==fam[1,1] & ind[,2]==fam[1,2] & ind[,3]==fam[1,3])
transfVEc
transfVec
newU=ind[transfVec, c(day.1.area.mm2,day.1.area.mm2, day.1.area.mm2, day.1.area.mm2, day.1.area.mm2)]
newU=ind[transfVec, c("day.1.area.mm2","day.1.area.mm2", "day.1.area.mm2", "day.1.area.mm2", "day.1.area.mm2")]
newU
newU=((newU+ind)*main + slope*(c(1, 2, 3, 4, 5)) - origin)^expon
newU=((newU[,]+ind)*main + slope*(c(1, 2, 3, 4, 5)) - origin)^expon
ind
newU=((newU[,])*main + slope*(c(1, 2, 3, 4, 5)) - origin)^expon
origin=-0.2
newU=((newU[,])*main + slope*(c(1, 2, 3, 4, 5)) - origin)^expon
newU
newU=ind[transfVec, c("day.1.area.mm2","day.1.area.mm2", "day.1.area.mm2", "day.1.area.mm2", "day.1.area.mm2")]
newU
head(sumSnark)
head(snarkSum)
calcBod=function(main, slope, origin, expon, fam, ind){
transfVec=which(ind[,1]==fam[1,1] & ind[,2]==fam[1,2] & ind[,3]==fam[1,3])
newU=ind[transfVec, c("day.1.area.mm2","day.4.area.mm2", "day.7.area.mm2", "day.10.area.mm2", "day.13.area.mm2")]
newU=((newU[,])*main + slope*(c(1, 2, 3, 4, 5)) - origin)^expon
ind[transfVec, c("bod1", "bod2", "bod3", "bod4", "bod5")]=newU
return(ind)
}
transfVec=which(ind[,1]==fam[1,1] & ind[,2]==fam[1,2] & ind[,3]==fam[1,3])
newU=ind[transfVec, c("day.1.area.mm2","day.4.area.mm2", "day.7.area.mm2", "day.10.area.mm2", "day.13.area.mm2")]
print(newU)
newU=((newU[,])*main + slope*(c(1, 2, 3, 4, 5)) - origin)^expon
print(newU)
ind[transfVec, c("bod1", "bod2", "bod3", "bod4", "bod5")]=newU
head(ind)
ind=data.frame(snark, bod1=0, bod2=0, bod3=0, bod4=0, bod5=0)
ind=data.frame(snark, bod1=0, bod2=0, bod3=0, bod4=0, bod5=0)
min(ind[,4])
transfVec
newU
ind[transfVec, c("bod1", "bod2", "bod3", "bod4", "bod5")]
ind[transfVec, c("bod1", "bod2", "bod3", "bod4", "bod5")]=ind[transfVec, c("bod1", "bod2", "bod3", "bod4", "bod5")]+newU
ind[transfVec,]
ind1=ind[which(ind[,1]=="Addis" & ind[,2]==0),]
ind1
ind=data.frame(snark, bod1=0, bod2=0, bod3=0, bod4=0, bod5=0)
ind1=ind[which(ind[,1]=="Addis" & ind[,2]==0),]
snarkBody=ddply(ind, .(population.of.origin, sex..f.0., family.id), function(rows) {calcBod(main=10, slope=0.1, origin=-2, expon=1.1, ind=ind1)})
fam=snarkSum[which(ind[,1]=="Addis" & ind[,2]==0),, drop=F]
ind1=ind[which(ind[,1]=="Addis" & ind[,2]==0),]
fam=snarkSum[which(ind[,1]=="Addis" & ind[,2]==0),, drop=F]
snarkBody=ddply(fam, .(population.of.origin, sex..f.0., family.id), function(rows) {calcBod(main=10, slope=0.1, origin=-2, expon=1.1, fam=fam, ind=ind1)})
calcBod=function(main, slope, origin, expon, fam, ind){
transfVec=which(ind[,1]==fam[1,1] & ind[,2]==fam[1,2] & ind[,3]==fam[1,3])
newU=ind[transfVec, c("day.1.area.mm2","day.4.area.mm2", "day.7.area.mm2", "day.10.area.mm2", "day.13.area.mm2")]
newU=((newU[,])*main + slope*(c(1, 2, 3, 4, 5)) - origin)^expon
ind[transfVec, c("bod1", "bod2", "bod3", "bod4", "bod5")]=ind[transfVec, c("bod1", "bod2", "bod3", "bod4", "bod5")]+newU
return(ind[transfVec,])
}
snarkBody=ddply(fam, .(population.of.origin, sex..f.0., family.id), function(rows) {calcBod(main=10, slope=0.1, origin=-2, expon=1.1, fam=fam, ind=ind1)})
fam=fam[1,,drop=F]
ind=ind1
fam
transfVec=which(ind[,1]==fam[1,1] & ind[,2]==fam[1,2] & ind[,3]==fam[1,3])
transfVec
ind
ind=data.frame(snark, bod1=0, bod2=0, bod3=0, bod4=0, bod5=0)
transfVec=which(ind[,1]==fam[1,1] & ind[,2]==fam[1,2] & ind[,3]==fam[1,3])
transfVec
newU=ind[transfVec, c("day.1.area.mm2","day.4.area.mm2", "day.7.area.mm2", "day.10.area.mm2", "day.13.area.mm2")]
newU
newU=((newU[,])*main + slope*(c(1, 2, 3, 4, 5)) - origin)^expon
ind[transfVec, c("bod1", "bod2", "bod3", "bod4", "bod5")]=ind[transfVec, c("bod1", "bod2", "bod3", "bod4", "bod5")]+newU
ind[transfVec,]
head(ind)
head(fam)
head(snarkSum)
fam=snarkSum[which(ind[,1]=="Addis" & ind[,2]==0),, drop=F]
head(fam)
head(ind)
calcBod=function(main, slope, origin, expon, fam, ind){
transfVec=which(ind[,1]==fam[1,1] & ind[,2]==fam[1,2] & ind[,3]==fam[1,3])
if(length(transfVec))<1){
print(Avast!)
return(NA)
}else{
newU=ind[transfVec, c("day.1.area.mm2","day.4.area.mm2", "day.7.area.mm2", "day.10.area.mm2", "day.13.area.mm2")]
newU=((newU[,])*main + slope*(c(1, 2, 3, 4, 5)) - origin)^expon
ind[transfVec, c("bod1", "bod2", "bod3", "bod4", "bod5")]=ind[transfVec, c("bod1", "bod2", "bod3", "bod4", "bod5")]+newU
return(ind[transfVec,])
}
}
calcBod=function(main, slope, origin, expon, fam, ind){
transfVec=which(ind[,1]==fam[1,1] & ind[,2]==fam[1,2] & ind[,3]==fam[1,3])
if(length(transfVec)<1){
print(Avast!)
return(NA)
}else{
newU=ind[transfVec, c("day.1.area.mm2","day.4.area.mm2", "day.7.area.mm2", "day.10.area.mm2", "day.13.area.mm2")]
newU=((newU[,])*main + slope*(c(1, 2, 3, 4, 5)) - origin)^expon
ind[transfVec, c("bod1", "bod2", "bod3", "bod4", "bod5")]=ind[transfVec, c("bod1", "bod2", "bod3", "bod4", "bod5")]+newU
return(ind[transfVec,])
}
}
calcBod=function(main, slope, origin, expon, fam, ind){
transfVec=which(ind[,1]==fam[1,1] & ind[,2]==fam[1,2] & ind[,3]==fam[1,3])
if(length(transfVec)<1){
print("Avast!")
return(NA)
}else{
newU=ind[transfVec, c("day.1.area.mm2","day.4.area.mm2", "day.7.area.mm2", "day.10.area.mm2", "day.13.area.mm2")]
newU=((newU[,])*main + slope*(c(1, 2, 3, 4, 5)) - origin)^expon
ind[transfVec, c("bod1", "bod2", "bod3", "bod4", "bod5")]=ind[transfVec, c("bod1", "bod2", "bod3", "bod4", "bod5")]+newU
return(ind[transfVec,])
}
}
main=10
slope=0.1
origin=-4
expon=1.1
ind=snark
ind=data.frame(snark, bod1=0, bod2=0, bod3=0, bod4=0, bod5=0)
ind1=ind[which(ind[,1]=="Addis" & ind[,2]==0),]
fam=snarkSum[which(snarkSum[,1]=="Addis" & snarkSum[,2]==0),, drop=F]
snarkBody=ddply(fam, .(population.of.origin, sex..f.0., family.id), function(rows) {calcBod(main=10, slope=0.1, origin=-2, expon=1.1, fam=fam, ind=ind1)})
snarkBody
fam
fam
main=10
slope=0.1
origin=-2
expon=1.1
fam=fam
ind=ind1
fam
fam=fam[5,,drop=F]
transfVec=which(ind[,1]==fam[1,1] & ind[,2]==fam[1,2] & ind[,3]==fam[1,3])
transfvec
transfVec
newU=ind[transfVec, c("day.1.area.mm2","day.4.area.mm2", "day.7.area.mm2", "day.10.area.mm2", "day.13.area.mm2")]
newU=((newU[,])*main + slope*(c(1, 2, 3, 4, 5)) - origin)^expon
ind[transfVec, c("bod1", "bod2", "bod3", "bod4", "bod5")]=ind[transfVec, c("bod1", "bod2", "bod3", "bod4", "bod5")]+newU
ind
ind[transfVec,]
ind=data.frame(snark, bod1=0, bod2=0, bod3=0, bod4=0, bod5=0)
snarkSum=ddply(ind, .(population.of.origin, sex..f.0., family.id), summarise, d1=mean(day.1.area.mm2, na.rm=T), d2=mean(day.4.area.mm2, na.rm=T), d3=mean(day.7.area.mm2, na.rm=T), d4=mean(day.10.area.mm2, na.rm=T), d5=mean(day.13.area.mm2, na.rm=T))
ind1=ind[which(ind[,1]=="Addis" & ind[,2]==0),]
fam=snarkSum[which(snarkSum[,1]=="Addis" & snarkSum[,2]==0),, drop=F]
head(ind1)
head(fam)
tail(fam)
snarkBody=ddply(fam, .(population.of.origin, sex..f.0., family.id), function(rows) {calcBod(main=10, slope=0.1, origin=-2, expon=1.1, fam=fam, ind=ind1)})
snarkBody
fam
snarkSum=ddply(ind, .(population.of.origin, sex..f.0., family.id), summarise, d1=mean(day.1.area.mm2, na.rm=T), d2=mean(day.4.area.mm2, na.rm=T), d3=mean(day.7.area.mm2, na.rm=T), d4=mean(day.10.area.mm2, na.rm=T), d5=mean(day.13.area.mm2, na.rm=T))
ind1=ind[which(ind[,1]=="Addis" & ind[,2]==0),]
fam
fam=snarkSum[1:3,, drop=F]
fam
ddply(fam, .(population.of.origin, sex..f.0., family.id), function(rows) {calcBod(main=10, slope=0.1, origin=-2, expon=1.1, fam=fam, ind=ind1)})
head(ind1)
calcBod=function(main, slope, origin, expon, fam, ind){
transfVec=which(ind[,1]==fam[1,1] & ind[,2]==fam[1,2] & ind[,3]==fam[1,3])
print(fam)
if(length(transfVec)<1){
print("Avast!")
return(NA)
}else{
newU=ind[transfVec, c("day.1.area.mm2","day.4.area.mm2", "day.7.area.mm2", "day.10.area.mm2", "day.13.area.mm2")]
newU=((newU[,])*main + slope*(c(1, 2, 3, 4, 5)) - origin)^expon
ind[transfVec, c("bod1", "bod2", "bod3", "bod4", "bod5")]=ind[transfVec, c("bod1", "bod2", "bod3", "bod4", "bod5")]+newU
return(ind[transfVec,])
}
}
calcBod=function(main, slope, origin, expon, fam, ind){
transfVec=which(ind[,1]==fam[1,1] & ind[,2]==fam[1,2] & ind[,3]==fam[1,3])
if(length(transfVec)<1){
print("Avast!")
return(NA)
}else{
newU=ind[transfVec, c("day.1.area.mm2","day.4.area.mm2", "day.7.area.mm2", "day.10.area.mm2", "day.13.area.mm2")]
newU=((newU[,])*main + slope*(c(1, 2, 3, 4, 5)) - origin)^expon
ind[transfVec, c("bod1", "bod2", "bod3", "bod4", "bod5")]=ind[transfVec, c("bod1", "bod2", "bod3", "bod4", "bod5")]+newU
return(ind[transfVec,])
}
}
fam=snarkSum[which(snarkSum[,1]=="Addis" & snarkSum[,2]==0),, drop=F]
snarkBody=ddply(fam, .(population.of.origin, sex..f.0., family.id), function(x) {calcBod(main=10, slope=0.1, origin=-2, expon=1.1, x, ind=ind1)})
snarkBody
ind2=ind[which(ind[,1]=="Addis" & ind[,2]==1),]
fam=snarkSum[which(snarkSum[,1]=="Addis" & snarkSum[,2]==1),, drop=F]
snarkBody2=ddply(fam, .(population.of.origin, sex..f.0., family.id), function(x) {calcBod(main=10, slope=0.1, origin=-2, expon=1.1, x, ind=ind2)})
head(snarkBody2)
tail(snarkBody)
tail(snark)
snark=read.table("snarkData.csv", header=T, sep=",", strip.white=T, as.is=T)
str(snark)
unique(snark[,2])
snark[,2]=as.character(snark[,2])
snark[,2]=tolower(snark[,2])
snark[which(snark[,2]=="f"),2]=0
snark[which(snark[,2]=="female"),2]=0
snark[which(snark[,2]=="m"),2]=1
snark[which(snark[,2]=="male"),2]=1
snarkSum=ddply(snark, .(population.of.origin, sex..f.0., family.id), summarise, d1=mean(day.1.area.mm2, na.rm=T), d2=mean(day.4.area.mm2, na.rm=T), d3=mean(day.7.area.mm2, na.rm=T), d4=mean(day.10.area.mm2, na.rm=T), d5=mean(day.13.area.mm2, na.rm=T))
ind=snark
ind=data.frame(snark, bod1=0, bod2=0, bod3=0, bod4=0, bod5=0)
snarkSum=ddply(ind, .(population.of.origin, sex..f.0., family.id), summarise, d1=mean(day.1.area.mm2, na.rm=T), d2=mean(day.4.area.mm2, na.rm=T), d3=mean(day.7.area.mm2, na.rm=T), d4=mean(day.10.area.mm2, na.rm=T), d5=mean(day.13.area.mm2, na.rm=T))
ind1=ind[which(ind[,1]=="Addis" & ind[,2]==0),]
fam=snarkSum[which(snarkSum[,1]=="Addis" & snarkSum[,2]==0),, drop=F]
snarkBody1=ddply(fam, .(population.of.origin, sex..f.0., family.id), function(x) {calcBod(main=10.1, slope=0.101, origin=-2.2, expon=0.9, x, ind=ind1)})
ind2=ind[which(ind[,1]=="Addis" & ind[,2]==1),]
fam=snarkSum[which(snarkSum[,1]=="Addis" & snarkSum[,2]==1),, drop=F]
snarkBody2=ddply(fam, .(population.of.origin, sex..f.0., family.id), function(x) {calcBod(main=8.9, slope=-0.121, origin=-3.1, expon=0.85, x, ind=ind2)})
ind3=ind[which(ind[,1]=="Juneau" & ind[,2]==0),]
fam=snarkSum[which(snarkSum[,1]=="Juneau" & snarkSum[,2]==0),, drop=F]
snarkBody3=ddply(fam, .(population.of.origin, sex..f.0., family.id), function(x) {calcBod(main=8.2, slope=0.54, origin=-3.42, expon=1.25, x, ind=ind3)})
ind4=ind[which(ind[,1]=="Juneau" & ind[,2]==1),]
fam=snarkSum[which(snarkSum[,1]=="Juneau" & snarkSum[,2]==1),, drop=F]
snarkBody4=ddply(fam, .(population.of.origin, sex..f.0., family.id), function(x) {calcBod(main=7.9, slope=0.18, origin=-2.87, expon=1.1, x, ind=ind4)})
ind5=ind[which(ind[,1]=="TdelFuego" & ind[,2]==0),]
fam=snarkSum[which(snarkSum[,1]=="TdelFuego" & snarkSum[,2]==0),, drop=F]
snarkBody5=ddply(fam, .(population.of.origin, sex..f.0., family.id), function(x) {calcBod(main=9.66, slope=0.387, origin=-4.178, expon=1.18, x, ind=ind5)})
ind6=ind[which(ind[,1]=="TdelFuego" & ind[,2]==1),]
fam=snarkSum[which(snarkSum[,1]=="TdelFuego" & snarkSum[,2]==1),, drop=F]
snarkBody6=ddply(fam, .(population.of.origin, sex..f.0., family.id), function(x) {calcBod(main=8.134, slope=0.092, origin=--5.235, expon=1.091, x, ind=ind6)})
head(snarkBody6)
head(snarkBody5)
head(snarkBody4)
head(snarkBody3)
head(snarkBody2)
head(snarkBody1)
snark=read.table("snarkData.csv", header=T, sep=",", strip.white=T, as.is=T)
str(snark)
unique(snark[,2])
snark[,2]=as.character(snark[,2])
snark[,2]=tolower(snark[,2])
snark[which(snark[,2]=="f"),2]=0
snark[which(snark[,2]=="female"),2]=0
snark[which(snark[,2]=="m"),2]=1
snark[which(snark[,2]=="male"),2]=1
snark[,c(4,5)]=snark[,c(4,5)]/3
snark[,c(7,8)]=snark[,c(7,8)]/1.5
snark[,c(13,14)]=snark[,c(13,14)]*1.5
snark[,c(16,17)]=snark[,c(16,17)]*2
1.5^2
snark=read.table("snarkData.csv", header=T, sep=",", strip.white=T, as.is=T)
str(snark)
unique(snark[,2])
snark[,2]=as.character(snark[,2])
snark[,2]=tolower(snark[,2])
snark[which(snark[,2]=="f"),2]=0
snark[which(snark[,2]=="female"),2]=0
snark[which(snark[,2]=="m"),2]=1
snark[which(snark[,2]=="male"),2]=1
snark[,c(4,5)]=snark[,c(4,5)]/3
snark[,c(6)]=snark[,c(6)]/9
snark[,c(7,8)]=snark[,c(7,8)]/1.5
snark[,c(9)]=snark[,c(9)]/2.25
snark[,c(13,14)]=snark[,c(13,14)]*1.5
snark[,c(15)]=snark[,c(15)]*2.25
snark[,c(16,17)]=snark[,c(16,17)]*2
snark[,c(18)]=snark[,c(18)]*4
snarkSum=ddply(snark, .(population.of.origin, sex..f.0., family.id), summarise, d1=mean(day.1.area.mm2, na.rm=T), d2=mean(day.4.area.mm2, na.rm=T), d3=mean(day.7.area.mm2, na.rm=T), d4=mean(day.10.area.mm2, na.rm=T), d5=mean(day.13.area.mm2, na.rm=T))
calcBod=function(main, slope, origin, expon, fam, ind){
transfVec=which(ind[,1]==fam[1,1] & ind[,2]==fam[1,2] & ind[,3]==fam[1,3])
if(length(transfVec)<1){
print("Avast!")
return(NA)
}else{
newU=ind[transfVec, c("day.1.area.mm2","day.4.area.mm2", "day.7.area.mm2", "day.10.area.mm2", "day.13.area.mm2")]
newU=((newU[,])*main + slope*(c(1, 2, 3, 4, 5)) - origin)^expon
ind[transfVec, c("bod1", "bod2", "bod3", "bod4", "bod5")]=ind[transfVec, c("bod1", "bod2", "bod3", "bod4", "bod5")]+newU
return(ind[transfVec,])
}
}
ind=data.frame(snark, bod1=0, bod2=0, bod3=0, bod4=0, bod5=0)
snarkSum=ddply(ind, .(population.of.origin, sex..f.0., family.id), summarise, d1=mean(day.1.area.mm2, na.rm=T), d2=mean(day.4.area.mm2, na.rm=T), d3=mean(day.7.area.mm2, na.rm=T), d4=mean(day.10.area.mm2, na.rm=T), d5=mean(day.13.area.mm2, na.rm=T))
ind1=ind[which(ind[,1]=="Addis" & ind[,2]==0),]
fam=snarkSum[which(snarkSum[,1]=="Addis" & snarkSum[,2]==0),, drop=F]
snarkBody1=ddply(fam, .(population.of.origin, sex..f.0., family.id), function(x) {calcBod(main=10.1, slope=0.101, origin=-2.2, expon=0.9, x, ind=ind1)})
ind2=ind[which(ind[,1]=="Addis" & ind[,2]==1),]
fam=snarkSum[which(snarkSum[,1]=="Addis" & snarkSum[,2]==1),, drop=F]
snarkBody2=ddply(fam, .(population.of.origin, sex..f.0., family.id), function(x) {calcBod(main=8.9, slope=-0.121, origin=-3.1, expon=0.85, x, ind=ind2)})
ind3=ind[which(ind[,1]=="Juneau" & ind[,2]==0),]
fam=snarkSum[which(snarkSum[,1]=="Juneau" & snarkSum[,2]==0),, drop=F]
snarkBody3=ddply(fam, .(population.of.origin, sex..f.0., family.id), function(x) {calcBod(main=8.2, slope=0.54, origin=-3.42, expon=1.25, x, ind=ind3)})
ind4=ind[which(ind[,1]=="Juneau" & ind[,2]==1),]
fam=snarkSum[which(snarkSum[,1]=="Juneau" & snarkSum[,2]==1),, drop=F]
snarkBody4=ddply(fam, .(population.of.origin, sex..f.0., family.id), function(x) {calcBod(main=7.9, slope=0.18, origin=-2.87, expon=1.1, x, ind=ind4)})
ind5=ind[which(ind[,1]=="TdelFuego" & ind[,2]==0),]
fam=snarkSum[which(snarkSum[,1]=="TdelFuego" & snarkSum[,2]==0),, drop=F]
snarkBody5=ddply(fam, .(population.of.origin, sex..f.0., family.id), function(x) {calcBod(main=9.66, slope=0.387, origin=-4.178, expon=1.18, x, ind=ind5)})
ind6=ind[which(ind[,1]=="TdelFuego" & ind[,2]==1),]
fam=snarkSum[which(snarkSum[,1]=="TdelFuego" & snarkSum[,2]==1),, drop=F]
snarkBody6=ddply(fam, .(population.of.origin, sex..f.0., family.id), function(x) {calcBod(main=8.134, slope=0.092, origin=--5.235, expon=1.091, x, ind=ind6)})
reSnark=rbind(snarkBody1, snarkBody2, snarkBody3, snarkBody4, snarkBody5, snarkBody6)
write.table(reSnark, "resnark.csv", sep=",", row.names=F, quote=F)
getwd()
snark=read.table("snarkData.csv", header=T, sep=",", strip.white=T, as.is=T)
str(snark)
unique(snark[,2])
snark[,2]=as.character(snark[,2])
snark[,2]=tolower(snark[,2])
snark[which(snark[,2]=="f"),2]=0
snark[which(snark[,2]=="female"),2]=0
snark[which(snark[,2]=="m"),2]=1
snark[which(snark[,2]=="male"),2]=1
snark[,c(4,5)]=snark[,c(4,5)]/3
snark[,c(6)]=snark[,c(6)]/9
snark[,c(7,8)]=snark[,c(7,8)]/1.5
snark[,c(9)]=snark[,c(9)]/2.25
snark[,c(13,14)]=snark[,c(13,14)]*1.5
snark[,c(15)]=snark[,c(15)]*2.25
snark[,c(16,17)]=snark[,c(16,17)]*2
snark[,c(18)]=snark[,c(18)]*4
snarkSum=ddply(snark, .(population.of.origin, sex..f.0., family.id), summarise, d1=mean(day.1.area.mm2, na.rm=T), d2=mean(day.4.area.mm2, na.rm=T), d3=mean(day.7.area.mm2, na.rm=T), d4=mean(day.10.area.mm2, na.rm=T), d5=mean(day.13.area.mm2, na.rm=T))
calcBod=function(main, slope, origin, expon, fam, ind){
transfVec=which(ind[,1]==fam[1,1] & ind[,2]==fam[1,2] & ind[,3]==fam[1,3])
if(length(transfVec)<1){
print("Avast!")
return(NA)
}else{
newU=ind[transfVec, c("day.1.area.mm2","day.4.area.mm2", "day.7.area.mm2", "day.10.area.mm2", "day.13.area.mm2")]
newU=((newU[,])*main + slope*(c(1, 2, 3, 4, 5)) - origin)^expon
ind[transfVec, c("bod1", "bod2", "bod3", "bod4", "bod5")]=ind[transfVec, c("bod1", "bod2", "bod3", "bod4", "bod5")]+newU
return(ind[transfVec,])
}
}
ind=data.frame(snark, bod1=0, bod2=0, bod3=0, bod4=0, bod5=0)
snarkSum=ddply(ind, .(population.of.origin, sex..f.0., family.id), summarise, d1=mean(day.1.area.mm2, na.rm=T), d2=mean(day.4.area.mm2, na.rm=T), d3=mean(day.7.area.mm2, na.rm=T), d4=mean(day.10.area.mm2, na.rm=T), d5=mean(day.13.area.mm2, na.rm=T))
ind1=ind[which(ind[,1]=="Addis" & ind[,2]==0),]
fam=snarkSum[which(snarkSum[,1]=="Addis" & snarkSum[,2]==0),, drop=F]
snarkBody1=ddply(fam, .(population.of.origin, sex..f.0., family.id), function(x) {calcBod(main=10.1, slope=0.101, origin=-2.2, expon=0.9, x, ind=ind1)})
ind2=ind[which(ind[,1]=="Addis" & ind[,2]==1),]
fam=snarkSum[which(snarkSum[,1]=="Addis" & snarkSum[,2]==1),, drop=F]
snarkBody2=ddply(fam, .(population.of.origin, sex..f.0., family.id), function(x) {calcBod(main=8.9, slope=-0.121, origin=-3.1, expon=0.85, x, ind=ind2)})
ind3=ind[which(ind[,1]=="Juneau" & ind[,2]==0),]
fam=snarkSum[which(snarkSum[,1]=="Juneau" & snarkSum[,2]==0),, drop=F]
snarkBody3=ddply(fam, .(population.of.origin, sex..f.0., family.id), function(x) {calcBod(main=8.2, slope=0.34, origin=-3.42, expon=1.25, x, ind=ind3)})
ind4=ind[which(ind[,1]=="Juneau" & ind[,2]==1),]
fam=snarkSum[which(snarkSum[,1]=="Juneau" & snarkSum[,2]==1),, drop=F]
snarkBody4=ddply(fam, .(population.of.origin, sex..f.0., family.id), function(x) {calcBod(main=7.9, slope=0.18, origin=-2.87, expon=1.1, x, ind=ind4)})
ind5=ind[which(ind[,1]=="TdelFuego" & ind[,2]==0),]
fam=snarkSum[which(snarkSum[,1]=="TdelFuego" & snarkSum[,2]==0),, drop=F]
snarkBody5=ddply(fam, .(population.of.origin, sex..f.0., family.id), function(x) {calcBod(main=9.66, slope=0.287, origin=-3.178, expon=1.18, x, ind=ind5)})
ind6=ind[which(ind[,1]=="TdelFuego" & ind[,2]==1),]
fam=snarkSum[which(snarkSum[,1]=="TdelFuego" & snarkSum[,2]==1),, drop=F]
snarkBody6=ddply(fam, .(population.of.origin, sex..f.0., family.id), function(x) {calcBod(main=8.534, slope=0.102, origin=-4.235, expon=1.091, x, ind=ind6)})
reSnark=rbind(snarkBody1, snarkBody2, snarkBody3, snarkBody4, snarkBody5, snarkBody6)
write.table(reSnark, "resnark.csv", sep=",", row.names=F, quote=F)
getwd()
list.files()
setwd("..")
list.files(recursive=T)
setwd("./softwareCarp/")
list.files(recursive=T)
list.files()
list.dirs()
list.dir()
?;list.dirs
?list.dirs
?list.files
list.files("./datafiles")
getwd()
list.dirs(recursive=F)
setwd("MCBWorkshop2015/")
list.dirs()
setwd("./R")
list.files
list.files()
list.files("./data_files/")
read.csv("./data_files/gardenia.csv")
gardenia = read.csv("./data_files/gardenia.csv")
print(gardenia)
dummyVector=c(4, 12, 1.3, 15, 0.1, 2.5, 7, 55)
dummyVector*2
dummyVector=dummyVector/dummyVector
dummyVector
dummyVector[1]="G"
dummyVector
?colnames
names(gardenia)
colnames(gardenia)
?read.csv
head(reSnark)
reSnark[,c(4:length(reSnark))]=round(reSnark[,c(4:length(reSnark))], 2)
head(reSnark)
write.table(reSnark, "resnark.csv", sep=",", row.names=F, quote=F)
getwd()
for(i in 10:1){
print(i)
}
dim(resnark)
dim(reSnark)
length(reSnark)
nrows(reSnark)
nrow(reSnark)
str(reSnark)
snark=reSnark
head(snark)
id=c(1:nrow(snark))
snark=cbind(snark[,c(1, 2, 3)], id, snark[,c(4:length(snark))])
id=c(1:nrow(snark))
snark=cbind(snark[,c(1, 2, 3)], id, snark[,c(4:length(snark))])
head(snark)
snark=reSnark
id=c(1:nrow(snark))
snark=cbind(snark[,c(1, 2, 3)], id, snark[,c(4:length(snark))])
head(snark)
snark=snarck[,c(1:7, 20, 8:10, 21, 11:13, 22, 14:16, 23, 17:19, 24)]
snark=snark[,c(1:7, 20, 8:10, 21, 11:13, 22, 14:16, 23, 17:19, 24)]
head(sneark)
head(snark)
sort(snark[,3])
?sort
?order
oder(snark[,3])
order(snark[,3])
head(snark)
nameVec=c("pop", "sex", "family", "id")
for(i in 1:5){
day=i*3-2
nameVec=c(nameVec, paste("l_", "day", sep=""))
nameVec=c(nameVec, paste("w_", "day", sep=""))
nameVec=c(nameVec, paste("a_", "day", sep=""))
nameVec=c(nameVec, paste("bod_", "day", sep=""))
print(nameVec)
}
for(i in 1:5){
day=i*3-2
nameVec=c(nameVec, paste("l_", day, sep=""))
nameVec=c(nameVec, paste("w_", day, sep=""))
nameVec=c(nameVec, paste("a_", day, sep=""))
nameVec=c(nameVec, paste("bod_", day, sep=""))
print(nameVec)
}
nameVec=c("pop", "sex", "family", "id")
for(i in 1:5){
day=i*3-2
nameVec=c(nameVec, paste("l_", day, sep=""))
nameVec=c(nameVec, paste("w_", day, sep=""))
nameVec=c(nameVec, paste("a_", day, sep=""))
nameVec=c(nameVec, paste("bod_", day, sep=""))
print(nameVec)
}
names(snark)=nameVec
str(snark)
head(snark)
snark2=data.frame(snark[,c(1, 2, 3)], id, snark[,c(4:length(snark))])
head(snark2)
snark2=snark2[,-5]
head(snark2)
